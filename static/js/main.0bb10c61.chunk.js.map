{"version":3,"sources":["useFetchJobs.js","components/Job.js","components/JobsPagination.js","components/SearchForm.js","App.js","index.js"],"names":["ACTIONS","reducer","state","action","type","loading","jobs","payload","error","hasNextPage","useFetchJobs","params","page","useReducer","dispatch","useEffect","cancelToken1","axios","CancelToken","source","get","cancelToken","token","markdown","then","res","data","catch","e","isCancel","cancelToken2","length","cancel","Job","job","useState","open","setOpen","Card","className","Body","Title","title","company","Subtitle","Date","created_at","toLocaleDateString","Badge","variant","location","style","wordBreak","how_to_apply","height","alt","src","company_logo","Text","Button","onClick","prevOpen","Collapse","in","description","JobsPagination","setPage","adjustPage","amount","prevPage","Pagination","Prev","Item","Ellipsis","active","Next","SearchForm","onParamChange","Form","Row","Group","as","Col","Label","Control","onChange","value","name","xs","Check","full_time","id","label","App","setParams","Container","param","target","prevParams","map","key","root","document","getElementById","ReactDOM","render"],"mappings":"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","file":"static/js/main.0bb10c61.chunk.js","sourcesContent":["import { useReducer, useEffect } from 'react'\nimport axios from 'axios'\n\nconst ACTIONS = {\n    MAKE_REQUEST: 'MAKE-REQUEST',\n    GET_DATA: 'GET-DATA',\n    ERROR: 'ERROR',\n    UPDATE_HAS_NEXT_PAGE: 'update-has-next-page'\n}\n\n\nconst BASE_URL = '/positions.json'\n\nconst reducer = (state, action) => {\n    switch (action.type) {\n        case ACTIONS.MAKE_REQUEST:\n            return { loading: true, jobs: [] }\n        case ACTIONS.GET_DATA:\n            return { ...state, loading: false, jobs: action.payload.jobs }\n        case ACTIONS.ERROR:\n            return { ...state, loading: false, error: action.payload.error, jobs: [] }\n        case ACTIONS.UPDATE_HAS_NEXT_PAGE:\n            return { ...state, hasNextPage: action.payload.hasNextPage }\n        default:\n            return state\n    }\n}\n\nconst useFetchJobs = (params, page) => {\n    const [state, dispatch] = useReducer(reducer, { jobs: [], loading: true })\n\n    useEffect(() => {\n        const cancelToken1 = axios.CancelToken.source()\n        dispatch(({ type: ACTIONS.MAKE_REQUEST }))\n        axios.get(BASE_URL, {\n            cancelToken: cancelToken1.token,\n            params: { markdown: true, page: page, ...params }\n        }).then(res => {\n            dispatch({ type: ACTIONS.GET_DATA, payload: { jobs: res.data } })\n        }).catch(e => {\n            if (axios.isCancel(e)) return\n            dispatch({ type: ACTIONS.ERROR, payload: { error: e } })\n        })\n\n        const cancelToken2 = axios.CancelToken.source()\n        axios.get(BASE_URL, {\n            cancelToken: cancelToken2.token,\n            params: { markdown: true, page: page + 1, ...params }\n        }).then(res => {\n            dispatch({ type: ACTIONS.UPDATE_HAS_NEXT_PAGE, payload: { hasNextPage: res.data.length !== 0 } })\n        }).catch(e => {\n            if (axios.isCancel(e)) return\n            dispatch({ type: ACTIONS.ERROR, payload: { error: e } })\n        })\n\n        return () => {\n            cancelToken1.cancel()\n            cancelToken2.cancel()\n        }\n    }, [params, page])\n\n    return state\n}\n\nexport default useFetchJobs;","import React, { useState } from 'react'\nimport { Card, Badge, Button, Collapse } from 'react-bootstrap'\nimport ReactMarkdown from 'react-markdown'\n\nexport default function Job({ job }) {\n  const [open, setOpen] = useState(false)\n  return (\n    <Card className=\"mb-3\">\n      <Card.Body>\n        <div className=\"d-flex justify-content-between\">\n          <div>\n            <Card.Title>\n              {job.title} -{' '}\n              <span className=\"text-muted font-weight-light\">\n                {job.company}\n              </span>\n            </Card.Title>\n            <Card.Subtitle className=\"text-muted mb-2\">\n              {new Date(job.created_at).toLocaleDateString()}\n            </Card.Subtitle>\n            <Badge variant=\"secondary\" className=\"mr-2\">\n              {job.type}\n            </Badge>\n            <Badge variant=\"secondary\">{job.location}</Badge>\n            <div style={{ wordBreak: 'break-all' }}>\n              <ReactMarkdown source={job.how_to_apply} />\n            </div>\n          </div>\n          <img\n            className=\"d-none d-md-block\"\n            height=\"50\"\n            alt={job.company}\n            src={job.company_logo}\n          />\n        </div>\n        <Card.Text>\n          <Button\n            onClick={() => setOpen(prevOpen => !prevOpen)}\n            variant=\"primary\"\n          >\n            {open ? 'Hide Details' : 'View Details'}\n          </Button>\n        </Card.Text>\n        <Collapse in={open}>\n          <div className=\"mt-4\">\n            <ReactMarkdown source={job.description} />\n          </div>\n        </Collapse>\n      </Card.Body>\n    </Card>\n  )\n}\n","import React from 'react'\nimport { Pagination } from 'react-bootstrap'\n\nexport default function JobsPagination({ page, setPage, hasNextPage }) {\n    const adjustPage = amount => {\n        setPage(prevPage => prevPage + amount)\n    }\n    return (\n        <Pagination>\n            {page !== 1 && <Pagination.Prev onClick={() => adjustPage(-1)} />}\n            {page !== 1 && <Pagination.Item onClick={() => setPage(1)}>1</Pagination.Item>}\n            {page > 2 && <Pagination.Ellipsis />}\n            {page > 2 && <Pagination.Item onClick={() => adjustPage(-1)} >{page - 1}</Pagination.Item>}\n            <Pagination.Item active>{page}</Pagination.Item>\n            {hasNextPage && <Pagination.Item onClick={() => adjustPage(1)} >{page + 1}</Pagination.Item>}\n            {hasNextPage && <Pagination.Next onClick={() => adjustPage(1)} />}\n        </Pagination>\n    )\n}\n","import React from 'react'\nimport { Form, Col } from 'react-bootstrap'\n\nexport default function SearchForm({ params, onParamChange }) {\n  return (\n    <Form className=\"mb-4\">\n      <Form.Row className=\"align-items-end\">\n        <Form.Group as={Col}>\n          <Form.Label>Description</Form.Label>\n          <Form.Control\n            onChange={onParamChange}\n            value={params.description}\n            name=\"description\"\n            type=\"text\"\n          />\n        </Form.Group>\n        <Form.Group as={Col}>\n          <Form.Label>Location</Form.Label>\n          <Form.Control\n            onChange={onParamChange}\n            value={params.location}\n            name=\"location\"\n            type=\"text\"\n          />\n        </Form.Group>\n        <Form.Group as={Col} xs=\"auto\" className=\"ml-2\">\n          <Form.Check\n            onChange={onParamChange}\n            value={params.full_time}\n            name=\"full_time\"\n            id=\"full-time\"\n            label=\"Only Full Time\"\n            type=\"checkbox\"\n            className=\"mb-2\"\n          />\n        </Form.Group>\n      </Form.Row>\n    </Form>\n  )\n}\n","import React, { useState } from 'react'\nimport useFetchJobs from './useFetchJobs'\nimport { Container } from 'react-bootstrap'\nimport Job from './components/Job'\nimport JobsPagination from './components/JobsPagination'\nimport SearchForm from './components/SearchForm'\n\nconst App = () => {\n  const [params, setParams] = useState({})\n  const [page, setPage] = useState(1)\n  const { jobs, loading, error, hasNextPage } = useFetchJobs(params, page)\n\n  const handleParamChange = e => {\n    const param = e.target.name\n    const value = e.target.value\n    setPage(1)\n    setParams(prevParams => {\n      return { ...prevParams, [param]: value }\n    })\n  }\n\n  return (\n    <Container className=\"my-4\">\n      <h1 className=\"mb-4\">GitHub Jobs</h1>\n      <SearchForm params={params} onParamChange={handleParamChange} />\n      <JobsPagination page={page} setPage={setPage} hasNextPage={hasNextPage} />\n      {loading && <h1>Loading...</h1>}\n      {error && <h1>Error. Try Refreshing.</h1>}\n      {jobs.map(job => {\n        return <Job key={job.id} job={job} />\n      })}\n      <JobsPagination page={page} setPage={setPage} hasNextPage={hasNextPage} />\n    </Container>\n  )\n}\n\nexport default App\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'\n\nconst root = document.getElementById('root')\n\nReactDOM.render(<App />, root)"],"sourceRoot":""}